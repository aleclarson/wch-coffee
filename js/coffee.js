// Generated by CoffeeScript 2.2.4
var INSTALL_DIR, fs, installed, loaded, os, parseDeps, path, semver, tarInstall, tarUrl, wch;

tarInstall = require('tar-install');

tarUrl = require('tar-url');

semver = require('semver');

path = require('path');

wch = require('wch');

fs = require('fsx');

os = require('os');

// Where versions are installed
INSTALL_DIR = path.join(os.homedir(), '.coffee');

// Installed versions
installed = new Set;

// Loaded transpilers
loaded = {};

exports.init = function() {
  if (fs.isDir(INSTALL_DIR)) {
    return fs.readDir(INSTALL_DIR).forEach(function(name) {
      var version;
      if (version = /-([^-]+)$/.exec(name)[1]) {
        return installed.add(version);
      }
    });
  }
};

// Load coffee-script for a package.
exports.load = async function(root) {
  var coffee, compile, dep, res, url, version;
  dep = parseDeps(root.devDependencies);
  version = semver.maxSatisfying(Array.from(installed), dep.version);
  if (version) { // Use an installed version.
    if (compile = loaded[version]) {
      return compile;
    }
    coffee = path.join(INSTALL_DIR, dep.name + '-' + version);
  // Install a missing version.
  } else if (url = (await tarUrl(dep.name, dep.version))) {
    res = (await tarInstall(url, INSTALL_DIR));
    coffee = res.path;
    installed.add(version = /-([^-]+)$/.exec(coffee)[1]);
    this.log.pale_green('Installed:', dep.name + '@' + version); // Invalid version!
  } else {
    this.log.pale_red('Package error:', root.path);
    this.log.pale_red('Invalid version:', dep.name + '@' + dep.version);
    return;
  }
  this.log.pale_yellow('Loading:', coffee);
  ({compile} = require(coffee));
  loaded[version] = compile;
  return compile;
};

parseDeps = function(deps) {
  var name, version;
  name = 'coffee-script';
  if (version = deps[name]) {
    return {name, version};
  }
  name = 'coffeescript';
  if (version = deps[name]) {
    return {name, version};
  }
  return {
    name,
    version: '*'
  };
};
